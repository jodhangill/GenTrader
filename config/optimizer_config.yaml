# Optimizer Configuration
# Change the values in this file to configure the optimization

# Trading strategy to be optimized
strategy:
  # Choose a strategy by using the name of the your strategy file in the strategies folder
  # For example: to use ./strategies/MyStrategy.py, enter MyStrategy
  name: RsiThreshold
  
  # Mutation constraints on parameters (list)
  constraints: 
    # (optional)
    # Format:
    # - [PARAMETER_NAME] [OPERATOR] [VALUE] (separated by spaces)
    - rsi_period > 0
    - rsi_low > 0
    - rsi_high > 0


# Stock data that will be used for backtesting (list)
# NOTE: If you choose to use multiple datasets, the first one will be used for the final plot
stock_data:
  # List of data sets
  # - ticker: Stock ticker. TIP: Lookup stock tickers at https://finance.yahoo.com/lookup/
  # - start_date: The first date of the stock data
  # - end_date: The ending date of the stock data
  # - weight: The respective influence that each data set has on evaluation. Percentage of influence = weight / sum of all weights.  
  # - starting_cash: The amount of money the strategy will start with for each backtest.  
  # - commission: The commission rate of trades.
  - ticker: BTC-USD
    start_date: 2017-12-23 # YYYY-MM-DD
    end_date: 2019-01-23 # YYYY-MM-DD
    weight: 0.6 # (float)
    starting_cash: 100000.0 # (float)
    commission: 0.01 # (float)

  - ticker: ETH-USD
    start_date: 2017-12-23 # YYYY-MM-DD
    end_date: 2019-01-23 # YYYY-MM-DD
    weight: 0.2 # (float)
    starting_cash: 100000.0 # (float)
    commission: 0.0 # (float)

  - ticker: SPY
    start_date: 2010-01-01 # YYYY-MM-DD
    end_date: 2015-01-07 # YYYY-MM-DD
    weight: 0.2 # (float)
    starting_cash: 50000.0 # (float)
    commission: 0.01 # (float)

# Parameters of the genetic optimization algorithm
genetic_algo_parameters:
  # Number of generations executed for optimization
  generation_count: 5

  # Number of parameter sets in each generation
  population: 10

  # Number of parameter sets to select from each generation
  selected: 3

  # Base standard deviation used for mutations
  base_std: 0.1

  # Whether mutations are scaled based on the parameter's magnitude
  relative_std: True

  # Probability of a crossover occurring between two parents
  crossover_rate: 0.5

  # Seed used for generating random values (leave blank to generate seed)
  seed: # (optional)


saving_options: 
  # Whether to use ./best_params.json (True) or default parameters (False) for the initial population
  load_params: False

  # Whether to save the best parameters from the run
  save_params: True


print_options:
  # Maximum items outputted for each parameter set printed
  max_list: 3

  # True: outputs progress at each generation, False: outputs total progress
  detailed_progress: True